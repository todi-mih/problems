# The name of the archive generated by the `pack` command, which you can submit.
ARCHIVE := submission.zip

# Compilation parameters.
JFLAGS := -Xlint:unchecked

# The directory containing your sources, and the one where we put the binaries.
# It's safest to leave these as is. If you change them, use relative paths!
SRC_DIR := .
OUT_DIR := .

# Compile *all* the sources found in $(SRC_DIR).
# Modify only if you want to compile other sources.
JAVA_SRC := $(wildcard $(SRC_DIR)/*.java)
JAVA_CLASSES := $(JAVA_SRC:$(SRC_DIR)/%.java=$(OUT_DIR)/%.class)

TARGETS := $(JAVA_CLASSES)

.PHONY: build clean pack

build: $(TARGETS)

clean:
	rm -f $(TARGETS) $(ARCHIVE)

pack:
	@find $(SRC_DIR) \
		\( -path "./\_utils/\*" -prune \) -o \
		-regex ".*\.\(cpp\|h\|hpp\|java\)" -exec zip $(ARCHIVE) {} +
	@zip $(ARCHIVE) Makefile
	@[ -f README.md ] && zip $(ARCHIVE) README.md \
		|| echo "You should write README.md!"
	@echo "Created $(ARCHIVE)"

# Run the Java program for each problem.
run-p1: $(OUT_DIR)/Servere.class
	java -cp $(OUT_DIR) Servere

run-p2: $(OUT_DIR)/Colorare.class
	java -cp $(OUT_DIR) Colorare 2

run-p3: $(OUT_DIR)/Compresie.class
	java -cp $(OUT_DIR) Compresie 3

run-p4: $(OUT_DIR)/Criptat.class
	java -cp $(OUT_DIR) Criptat 4

run-p5: $(OUT_DIR)/Oferta.class
	java -cp $(OUT_DIR) Oferta 5

$(OUT_DIR)/Servere.class: $(SRC_DIR)/Servere.java
	javac $< -d $(OUT_DIR) -cp $(SRC_DIR) $(JFLAGS)

$(OUT_DIR)/Colorare.class: $(SRC_DIR)/Colorare.java
	javac $< -d $(OUT_DIR) -cp $(SRC_DIR) $(JFLAGS)

$(OUT_DIR)/Compresie.class: $(SRC_DIR)/Compresie.java
	javac $< -d $(OUT_DIR) -cp $(SRC_DIR) $(JFLAGS)

$(OUT_DIR)/Criptat.class: $(SRC_DIR)/Criptat.java
	javac $< -d $(OUT_DIR) -cp $(SRC_DIR) $(JFLAGS)

$(OUT_DIR)/Oferta.class: $(SRC_DIR)/Oferta.java
	javac $< -d $(OUT_DIR) -cp $(SRC_DIR) $(JFLAGS)